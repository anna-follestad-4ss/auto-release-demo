name: CD - orig. triggered by preCD 


on:
  workflow_dispatch:
  
  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      #- name: Install dependencies
      #  run: |
      #    python -m pip install --upgrade pip
      #    python -m pip install build sphinx pydata_sphinx_theme

      - name: Obtain notes and save to file
        run: |
          echo "$VERSION_NUMBER"
          gh api -H "Accept: application/vnd.github+json" /repos/anna-follestad-4ss/auto-release-demo/releases/tags/latest -q ".body" > docs/new_notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get new version number from tag
        run: |
        
          echo "1"
          echo $(gh api -H "Accept: application/vnd.github+json" /repos/anna-follestad-4ss/auto-release-demo/releases/tags/latest )
          echo "2"
          
          echo "GIT_TAG= `echo $(gh api -H "Accept: application/vnd.github+json" /repos/anna-follestad-4ss/auto-release-demo/releases/tags/latest -q ".body")`" >> $GITHUB_ENV
          
          
          #  git fetch -a
          # echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
          
          ref="${{github.ref}}"
          prefix="refs/tags/v"
          suffix="-test"
          version=${ref#$prefix}
          version=${version%$suffix}
          echo "VERSION_NUMBER=$version" >> $GITHUB_ENV
          echo "$GIT_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Build package
      #  run: python -m build --sdist --wheel --outdir ./dist

      #- name: Build documentation
      #  run:  |
      #    pip install .
      #    sphinx-build -b html ./docs ./build/html

      #- name: Publish package to TestPyPi
      #  # if: ${{ startswith(github.ref, 'refs/tags/v') && endsWith(github.ref, '-test') }}
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    user: __token__
      #    password: ${{ secrets.PYPI_TEST_API_KEY }}
      #    repository_url: https://test.pypi.org/legacy/
      
      #- name: Upload documentation to TEST blob storage
      #  # if: ${{ startswith(github.ref, 'refs/tags/v') && endsWith(github.ref, '-test') }}
      #  uses: azure/CLI@v1
      #  env:
      #    AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.FOURINSIGHTTEST_DOC_BLOB_CONNSTR }}
      #  with:
      #    inlineScript: |
      #      az storage blob delete-batch -s "\$web" --pattern "yellowbanana/python/docs/latest/*"
      #      az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "yellowbanana/python/docs/latest"
      #      az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "yellowbanana/python/docs/v$VERSION_NUMBER"
        
     
