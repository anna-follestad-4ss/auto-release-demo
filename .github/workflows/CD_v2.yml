name: CD with release notes 

on:
  #workflow_dispatch:
  
  push:
    tags:
      - 'make-*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build sphinx pydata_sphinx_theme
          
      - name: Get new version number from tag
        run: |
          ref="${{github.ref}}"
          prefix="refs/tags/make-"
          # suffix="-test"
          version=${ref#$prefix}
          version_pep440=${version%$suffix}
          echo "VERSION_NUMBER=$version" >> $GITHUB_ENV
          echo "VERSION_NUMBER_PEP440=$version_pep440" >> $GITHUB_ENV
          
          echo "${{ env.VERSION_NUMBER }}"
          echo "${{ env.VERSION_NUMBER_PEP440 }}"
  
      - name: Replace package version number
        run: |
          filename="src/YellowBanana/__init__.py"
          search_pattern="__version__ = \"0.0.1\""
          replacement_text="__version__ = \"$VERSION_NUMBER_PEP440\""
          sed -i "s/$search_pattern/$replacement_text/" "$filename"
          
      - name: Draft Release
        run: |
          gh release create ${{ env.VERSION_NUMBER }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.access_token }}
          
      # Get release notes 
      - name: Obtain notes and save to file
        run: |
          echo "$VERSION_NUMBER"
          gh api -H "Accept: application/vnd.github+json" /repos/anna-follestad-4ss/auto-release-demo/releases/tags/${{ env.VERSION_NUMBER }} -q ".body" > docs/new_notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%d %B %Y')"
          
      - name: ubuntu text adder
        run: |
          cd docs
          sed -i "3 i \ " release_notes.rst
          sed -i "3 i \ " release_notes.rst
          sed -i "3 i \ " release_notes.rst
          sed -i '3 r new_notes.txt' release_notes.rst
          sed -i "3 i ------------------------------------------------" release_notes.rst
          sed -i '3 i What is new in version ${{ env.VERSION_NUMBER  }} (${{ steps.date.outputs.date }})' release_notes.rst
          sed -i "3 i \ " release_notes.rst
          sed -i '9s/.*/ /' release_notes.rst
          
      - name: Setup Git
        run: |
          git config user.name 'anna-follestad-4ss'
          git config user.email 'anna.fehn.follestad@4subsea.com'
        
      - name: If prod, Push latest version to main 
        if: ${{ startswith(github.ref, 'refs/tags/make-v') && !endsWith(github.ref, '-test') }}
        run: |
          git add docs/release_notes.rst
          git commit -m "added latest release notes from autogen"
          git push origin main
          

        


          
      - name: Build package
        run: python -m build --sdist --wheel --outdir ./dist

      - name: Build documentation
        run:  |
          pip install .
          sphinx-build -b html ./docs ./build/html
          
      - name: Publish package to TestPyPi
        if: ${{ startswith(github.ref, 'refs/tags/make-v') && endsWith(github.ref, '-test') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_KEY }}
          repository_url: https://test.pypi.org/legacy/


      - name: Upload documentation to TEST blob storage
        if: ${{ startswith(github.ref, 'refs/tags/make-') && endsWith(github.ref, '-test') }}
        uses: azure/CLI@v1
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.FOURINSIGHTTEST_DOC_BLOB_CONNSTR }}
        with:
          inlineScript: |
            az storage blob delete-batch -s "\$web" --pattern "yellowbanana/python/docs/latest/*"
            az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "yellowbanana/python/docs/latest"
            az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "yellowbanana/python/docs/$VERSION_NUMBER"
    
      - name: Upload documentation to PROD blob storage
        if: ${{ startswith(github.ref, 'refs/tags/make-') && !endsWith(github.ref, '-test') }}
        uses: azure/CLI@v1
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.FOURINSIGHTPROD_DOC_BLOB_CONNSTR }}
        with:
          inlineScript: |
            az storage blob delete-batch -s "\$web" --pattern "yellowbanana/python/docs/latest/*"
            az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "yellowbanana/python/docs/latest"
            az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "yellowbanana/python/docs/$VERSION_NUMBER"
            
      - name: Delete make-release
        # if: ${{ startswith(github.ref, 'refs/tags/make-') && endsWith(github.ref, '-test') }}
        run: |
          gh release delete make-${{ env.VERSION_NUMBER }} --cleanup-tag -y
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Move tag to include latest commit
        run: |
          git pull          
          git tag -d ${{ env.VERSION_NUMBER  }}
          git push origin :refs/tags/${{ env.VERSION_NUMBER  }}
          
          git tag ${{ env.VERSION_NUMBER  }}
          git push --tags
      
      - name: Publish drafted release
        run: |
          gh release edit ${{ env.VERSION_NUMBER  }} --draft=False
        env:
          GITHUB_TOKEN: ${{ secrets.access_token }}

          
          
        
